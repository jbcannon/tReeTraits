% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_qsms.R
\name{run_qsm}
\alias{run_qsm}
\title{Generate QSM using TreeQSM Matlab script from inputs}
\usage{
run_qsm(
  tree_mat,
  unique_id,
  output_results,
  TreeQSM_directory,
  parameter_inputs = default_qsm_inputs(),
  wait = TRUE,
  exit = TRUE,
  overwrite = FALSE,
  template_script = system.file("extdata", "dynamic_QSM_script_template.m", package =
    "tReeTraits")
)
}
\arguments{
\item{tree_mat}{character - path to .mat file representing tree point cloud.
Can be created using [`las_to_mat()`].}

\item{unique_id}{character - ID to use for saving filenames}

\item{output_results}{character - path to location for output results}

\item{TreeQSM_directory}{character - path to location of TreeQSM folder}

\item{parameter_inputs}{list - parameter inputs generated by or modified
from `[default_qsm_inputs()]`. Must contain numeric vectors `PatchDiam1`,
`PatchDiam2Min`, `PatchDiam2Max`, and `lycl`.
See [`TreeQSM`](http://github.com/InverseTampere/TreeQSM)documentation for more information on input parameters.}

\item{wait}{boolean - indicates whether to wait for matlab to complete before
continuing}

\item{exit}{boolean - indicates whether to close matlab after run}

\item{overwrite}{boolean - indicates whether to overwrite any exiting .mat
file with the same name.}

\item{template_script}{character - path to dynamic input script template
for generated matlab code. Defaults to file installed with library, but
exposed to user for customization}
}
\description{
This function generates a QSM using TreeQSM code in Matlab. The code generates
a Matlab script script (.m) capable of running TreeQSM based on input data
and parameters. Requires that Matlab be
installed, the path known, and appropriate Matlab extensions installed
See [Readme.md]('../README.md') for details.
}
\examples{
library(lidR)
las = readLAS(system.file("extdata", "tree_0744.laz", package="tReeTraits"))
las = filter_poi(las, Intensity > 44000) # remove foliage returns
las = clean_las(las)
tree_mat = las_to_mat(las)
qsm_file = run_qsm(tree_mat = tree_mat, unique_id = 'Tree_0744',
    output_results = 'R:/landscape_ecology/projects/canopy-traits/qsm-results/',
    TreeQSM_directory = 'R:/landscape_ecology/projects/canopy-traits/docs/TreeQSM/')
qsm = load_qsm(qsm_file)
head(qsm)
}
